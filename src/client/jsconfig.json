{
  "$schema": "https://json.schemastore.org/jsconfig.json",
  // prettier-ignore
  "compilerOptions": {
    /* Basic Options */
    "target": "es2016",                             /* Specify ECMAScript target version: 'es3', 'es5', 'es6', 'es2015' (default), 'es2016', 'es2017', 'es2018', 'es2019', 'es2020' or 'esnext'. */
    "module": "es2015",                             /* Specify module code generation: 'none', 'commonJS', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'esnext'. */
    // "lib": [],                                   /* Specify library files to be included in the compilation. */
    "checkJs": true,                                /* Report errors in .js files. */
    // "jsx": "",                                   /* Specify JSX code generation: 'preserve', 'react', 'react-jsx', 'react-jsxdev' or 'react-native'. */
    // "declaration": false,                        /* Generates corresponding '.d.ts' file. */
    // "declarationMap": false,                     /* Generates a sourcemap for each corresponding '.d.ts' file. */
    // "sourceMap": true,                           /* Generates corresponding '.map' file. */
    // "outFile": "./",                             /* Concatenate and emit output to single file. */
    // "outDir": "./",                              /* Redirect output structure to the directory. */
    // "rootDir": "./",                             /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    // "removeComments": true,                      /* Do not emit comments to output. */
    // "noEmit": false,                             /* Do not emit outputs. */
    // "isolatedModules": true,                     /* Unconditionally emit imports for unresolved files. */

    /* Strict Type-Checking Options */
    "strict": true,                                 /* Enable all strict type-checking options. Equivalent to enabling all of the strict mode options. */
    // "noImplicitAny": false,                      /* Warn on expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": false,                   /* Enable strict null checks. */
    // "strictFunctionTypes": false,                /* Enable strict checking of function types. */
    // "strictBindCallApply": false,                /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // "strictPropertyInitialization": false,       /* Ensure non-undefined class properties are initialized in the constructor. */
    // "noImplicitThis": false,                     /* Raise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": false,                       /* Parse in strict mode and emit "use strict" for each source file. */

    /* Additional Checks */
    // "noUnusedLocals": false,                     /* Report errors on unused locals. */
    // "noUnusedParameters": false,                 /* Report errors on unused parameters. */
    // "noImplicitReturns": false,                  /* Report error when not all code paths in function return a value. */
    // "noFallthroughCasesInSwitch": false,         /* Report errors for fallthrough cases in switch statement. */
    // "noUncheckedIndexedAccess": false,           /* Add `undefined` to an un-declared field in a type. */

    /* Module Resolution Options */
    "moduleResolution": "node"                      /* Specify module resolution strategy: 'node' (Node) or 'classic' (TypeScript pre 1.6). */
    // "baseUrl": "./",                             /* Base directory to resolve non-absolute module names. */
    // "paths": {},                                 /* Specify path mapping to be computed relative to baseUrl option. */
    // "rootDirs": [],                              /* Specify list of root directory to be used when resolving modules. */
    // "typeRoots": [],                             /* Specify list of directories for type definition files to be included. */
    // "types": [],                                 /* Type declaration files to be included in compilation. */
    // "allowSyntheticDefaultImports": false,       /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    // "esModuleInterop": false,                    /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    // "allowUmdGlobalAccess": false,               /* Allow accessing UMD globals from modules. */

    /* Source Map Options */
    // "sourceRoot": "",                            /* Specify the location where debugger should locate JavaScript files instead of source locations. */
    // "mapRoot": "",                               /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": false,                    /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": false,                      /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    // "experimentalDecorators": false,             /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": false,              /* Enables experimental support for emitting type metadata for decorators. */

    /* Advanced Options */
    // "skipLibCheck": false,                       /* Do not check declaration files. */
    // "forceConsistentCasingInFileNames": false    /* Disallow inconsistently-cased references to the same file. */
  },
  "include": [
    "src/**/*",
    "assets.d.ts" // Workaround for TS2307: (JS) Cannot find module '.png' or its corresponding type declarations.
  ]
}
